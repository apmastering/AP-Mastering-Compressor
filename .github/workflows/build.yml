name: Build JUCE Plugin

on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install CMake
      uses: jwlawson/actions-setup-cmake@v1
      with:
        cmake-version: '3.22.0'

    - name: Install JUCE dependencies on Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          libasound2-dev \
          libcurl4-openssl-dev \
          libfreetype6-dev \
          libx11-dev \
          libxcomposite-dev \
          libxcursor-dev \
          libxext-dev \
          libxinerama-dev \
          libxrandr-dev \
          libxrender-dev \
          libwebkit2gtk-4.0-dev

    - name: Install JUCE dependencies on macOS
      if: matrix.os == 'macos-latest'
      run: |
        brew update
        brew install cmake
        xcode-select --install  # Ensures Xcode Command Line Tools are installed

    - name: Install JUCE dependencies on Windows
      if: matrix.os == 'windows-latest'
      run: |
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
        choco install visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools"
        choco install visualstudio2019-workload-native-desktop

    - name: Build project on Windows
      if: matrix.os == 'windows-latest'
      run: |
        mkdir build
        cd build
        cmake .. -G "Visual Studio 16 2019"
        cmake --build . --config Release

    - name: Build project on macOS
      if: matrix.os == 'macos-latest'
      run: |
        mkdir build
        cd build
        cmake .. -G Xcode
        cmake --build . --config Release

    - name: Build project on Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        cmake --build .
